{"ast":null,"code":"var _jsxFileName = \"/Users/chenfeng/Documents/GitHub/ReactiveGameWebApp/src/components/very.easy.component.js\";\nimport React, { Component } from 'react';\nimport './very.easy.component.css';\nimport { connect } from 'react-redux';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport reducerOne from '../reducers/reducer';\nconst store = createStore(reducerOne);\n\nclass VeryEasyComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleRetry = () => {\n      this.setState({\n        tries: \"4\",\n        status: \"\",\n        guess: \"\",\n        matching: \"\",\n        number: \"\"\n      });\n    };\n\n    this.handleNext = () => {\n      this.setState({\n        tries: \"4\",\n        status: \"\",\n        guess: \"\",\n        matching: \"\",\n        number: \"\",\n        options: [\"mown\", \"moan\", \"hour\", \"pear\", \"pale\"]\n      });\n    };\n\n    this.handlePrevious = () => {\n      this.setState({\n        tries: \"4\",\n        status: \"\",\n        guess: \"\",\n        matching: \"\",\n        number: \"\",\n        options: [\"dose\", \"fare\", \"hart\", \"floe\", \"feat\"]\n      });\n    };\n\n    this.handleTries = () => {\n      this.setState({\n        tries: this.state.tries - 1\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault(); // const newGuess = this.state.guess\n\n      this.setState({\n        matching: this.state.guess\n      });\n\n      if (this.state.answer === this.state.guess) {\n        this.setState({\n          number: this.props.number1,\n          status: \"You Win\"\n        });\n      }\n\n      if (this.state.guess === \"fare\") {\n        this.setState({\n          number: this.props.number2,\n          status: \"retry\"\n        });\n      }\n\n      if (this.state.guess === \"dose\") {\n        this.setState({\n          number: this.props.number3,\n          status: \"retry\"\n        });\n      }\n\n      if (this.state.guess === \"hart\") {\n        this.setState({\n          number: this.props.number4,\n          status: \"retry\"\n        });\n      }\n\n      if (this.state.guess === \"feat\") {\n        this.setState({\n          number: this.props.number5,\n          status: \"retry\"\n        });\n      } //conditions for array 2\n\n\n      if (this.state.answer2 === this.state.guess) {\n        this.setState({\n          number: this.props.number,\n          status: \"You Win\"\n        });\n      }\n\n      if (this.state.guess === \"mown\") {\n        this.setState({\n          number: this.props.number6,\n          status: \"retry\"\n        });\n      }\n\n      if (this.state.guess === \"pale\") {\n        this.setState({\n          number: this.props.number7,\n          status: \"retry\"\n        });\n      }\n\n      if (this.state.guess === \"hour\") {\n        this.setState({\n          number: this.props.number8,\n          status: \"retry\"\n        });\n      }\n\n      if (this.state.guess === \"pear\") {\n        this.setState({\n          number: this.props.number9,\n          status: \"retry\"\n        });\n      }\n    };\n\n    this.state = {\n      options: [\"dose\", \"fare\", \"hart\", \"floe\", \"feat\"],\n      guess: \"\",\n      arrayoption: \"options\",\n      status: \"\",\n      matching: \"\",\n      answer: \"floe\",\n      answer2: \"moan\",\n      number: \"\",\n      tries: \"4\"\n    };\n    this.handleInput = this.handleInput.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTries = this.handleTries.bind(this);\n    this.handleNext = this.handleNext.bind(this);\n    this.handlePrevious = this.handlePrevious.bind(this);\n    this.handleRetry = this.handleRetry.bind(this);\n  }\n\n  handleInput(e) {\n    this.setState({\n      guess: e.target.value\n    });\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"  container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"home-icon\",\n      href: \"http://localhost:3000/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Home\"), React.createElement(\"div\", {\n      classname: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-2 col-sm-2 col-xs-2 col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"col-lg-8 col-md-8 col-sm-8 col-xs-8 col-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \" very-easy card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, \"Very Easy Level!\"), React.createElement(\"label\", {\n      style: {\n        fontWeight: 'bold'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, \"input guess\"), React.createElement(\"input\", {\n      value: this.state.guess,\n      onChange: this.handleInput,\n      placeholder: \"type here...\",\n      className: \" input form-control\",\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onClick: this.handleTries,\n      className: \"submit-button\",\n      type: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, this.state.options.map(item => React.createElement(\"li\", {\n      className: \"list\",\n      key: item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, item))), React.createElement(\"table\", {\n      class: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      style: {\n        borderTop: '1px solid aqua'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Guess\"), React.createElement(\"th\", {\n      scope: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Matching letters\"))), React.createElement(\"tbody\", {\n      style: {\n        border: '1px solid aqua'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      style: {\n        border: '1px solid aqua'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      style: {\n        border: '1px solid aqua'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, this.state.matching), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, this.state.number)), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleRetry,\n      className: \"btm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Retry\"), React.createElement(\"button\", {\n      onClick: this.handleNext,\n      className: \"btm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Next\"), React.createElement(\"button\", {\n      onClick: this.handlePrevious,\n      className: \"btm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }, \"Previous\"), React.createElement(\"span\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.state.status), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, \" Tries Left=\", this.state.tries))))))), React.createElement(\"div\", {\n      className: \"col-lg-2 col-md-2 col-sm-2 col-xs-2 col-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    number1: state.matching_number,\n    number2: state.matching_number1,\n    number3: state.matching_number2,\n    number4: state.matching_number3,\n    number5: state.matching_number4,\n    // second level matchings\n    number6: state.matching_number5,\n    number7: state.matching_number6,\n    number8: state.matching_number7,\n    number9: state.matching_number8\n  };\n};\n\nexport default connect(mapStateToProps)(VeryEasyComponent);","map":{"version":3,"sources":["/Users/chenfeng/Documents/GitHub/ReactiveGameWebApp/src/components/very.easy.component.js"],"names":["React","Component","connect","createStore","Provider","reducerOne","store","VeryEasyComponent","constructor","props","handleRetry","setState","tries","status","guess","matching","number","handleNext","options","handlePrevious","handleTries","state","handleSubmit","e","preventDefault","answer","number1","number2","number3","number4","number5","answer2","number6","number7","number8","number9","arrayoption","handleInput","bind","target","value","render","fontWeight","map","item","borderTop","border","mapStateToProps","matching_number","matching_number1","matching_number2","matching_number3","matching_number4","matching_number5","matching_number6","matching_number7","matching_number8"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './very.easy.component.css';\r\nimport {connect} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport {Provider} from 'react-redux';\r\nimport reducerOne from '../reducers/reducer';\r\n\r\nconst store = createStore(reducerOne);\r\n\r\nclass VeryEasyComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            options: [\"dose\", \"fare\", \"hart\", \"floe\", \"feat\"],\r\n\r\n            guess: \"\",\r\n            arrayoption: \"options\",\r\n\r\n            status: \"\",\r\n            matching: \"\",\r\n\r\n            answer: \"floe\",\r\n            answer2: \"moan\",\r\n            number: \"\",\r\n            tries: \"4\"\r\n\r\n        }\r\n        this.handleInput = this.handleInput.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleTries = this.handleTries.bind(this);\r\n        this.handleNext = this.handleNext.bind(this);\r\n        this.handlePrevious = this.handlePrevious.bind(this);\r\n        this.handleRetry = this.handleRetry.bind(this);\r\n\r\n\r\n    }\r\n\r\n    handleRetry = () => {\r\n        this.setState({\r\n            tries: \"4\",\r\n            status: \"\",\r\n            guess: \"\",\r\n            matching: \"\",\r\n            number: \"\"\r\n        })\r\n    }\r\n    handleNext = () => {\r\n        this.setState({\r\n            tries: \"4\",\r\n            status: \"\",\r\n            guess: \"\",\r\n            matching: \"\",\r\n            number: \"\",\r\n            options: [\"mown\", \"moan\", \"hour\", \"pear\", \"pale\"]\r\n        })\r\n    }\r\n    handlePrevious = () => {\r\n        this.setState({\r\n            tries: \"4\",\r\n            status: \"\",\r\n            guess: \"\",\r\n            matching: \"\",\r\n            number: \"\",\r\n            options: [\"dose\", \"fare\", \"hart\", \"floe\", \"feat\"]\r\n        })\r\n    }\r\n    handleTries = () => {\r\n\r\n\r\n        this.setState({\r\n            tries: this.state.tries - 1\r\n        })\r\n\r\n\r\n    }\r\n\r\n    handleInput(e) {\r\n\r\n        this.setState({\r\n            guess: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSubmit = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        // const newGuess = this.state.guess\r\n        this.setState({\r\n            matching: this.state.guess\r\n        })\r\n        if (this.state.answer === this.state.guess) {\r\n            this.setState({\r\n                number: this.props.number1,\r\n                status: \"You Win\"\r\n\r\n            })\r\n\r\n\r\n        }\r\n        if (this.state.guess === \"fare\") {\r\n            this.setState({\r\n                number: this.props.number2,\r\n                status: \"retry\"\r\n            })\r\n        }\r\n        if (this.state.guess === \"dose\") {\r\n            this.setState({\r\n                number: this.props.number3,\r\n                status: \"retry\"\r\n            })\r\n        }\r\n        if (this.state.guess === \"hart\") {\r\n            this.setState({\r\n                number: this.props.number4,\r\n                status: \"retry\"\r\n            })\r\n        }\r\n        if (this.state.guess === \"feat\") {\r\n            this.setState({\r\n                number: this.props.number5,\r\n                status: \"retry\"\r\n            })\r\n        }\r\n\r\n\r\n//conditions for array 2\r\n\r\n        if (this.state.answer2 === this.state.guess) {\r\n            this.setState({\r\n                number: this.props.number,\r\n                status: \"You Win\"\r\n\r\n            })\r\n\r\n\r\n        }\r\n        if (this.state.guess === \"mown\") {\r\n            this.setState({\r\n                number: this.props.number6,\r\n                status: \"retry\"\r\n            })\r\n        }\r\n        if (this.state.guess === \"pale\") {\r\n            this.setState({\r\n                number: this.props.number7,\r\n                status: \"retry\"\r\n            })\r\n        }\r\n        if (this.state.guess === \"hour\") {\r\n            this.setState({\r\n                number: this.props.number8,\r\n                status: \"retry\"\r\n            })\r\n        }\r\n        if (this.state.guess === \"pear\") {\r\n            this.setState({\r\n                number: this.props.number9,\r\n                status: \"retry\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Provider store={store}>\r\n\r\n                <div className=\"  container-fluid\">\r\n                    <a className=\"home-icon\" href=\"http://localhost:3000/\">Home</a>\r\n                    <div classname=\"row\">\r\n                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-2 col-2\"></div>\r\n                        <div className=\"col-lg-8 col-md-8 col-sm-8 col-xs-8 col-8\">\r\n                            <div class=\" very-easy card\">\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <h4>Very Easy Level!</h4>\r\n\r\n\r\n                                    <label style={{fontWeight: 'bold'}}>input guess</label>\r\n                                    <input value={this.state.guess}\r\n                                           onChange={this.handleInput}\r\n                                           placeholder=\"type here...\" className=\" input form-control\" type=\"text\"/>\r\n                                    <input onClick={this.handleTries} className=\"submit-button\" type=\"Submit\"/>\r\n                                </form>\r\n                                <ul>\r\n\r\n                                    {this.state.options.map(item => (\r\n                                        <li className=\"list\" key={item}>{item}</li>\r\n                                    ))}\r\n                                </ul>\r\n                                <table class=\"\">\r\n                                    <thead style={{borderTop: '1px solid aqua'}}>\r\n                                    <tr>\r\n                                        <th scope=\"col\">Guess</th>\r\n                                        <th scope=\"col\">Matching letters</th>\r\n\r\n\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody style={{border: '1px solid aqua'}}>\r\n                                    <tr style={{border: '1px solid aqua'}}>\r\n                                        <td style={{border: '1px solid aqua'}}>\r\n\r\n                                            {this.state.matching}\r\n                                        </td>\r\n\r\n                                        <td>\r\n\r\n                                            {this.state.number}\r\n                                        </td>\r\n\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <button onClick={this.handleRetry} className=\"btm\">Retry</button>\r\n                                            <button onClick={this.handleNext} className=\"btm\">Next</button>\r\n                                            <button onClick={this.handlePrevious} className=\"btm\">Previous</button>\r\n                                            <span className=\"status\">{this.state.status}</span>\r\n                                            <span> Tries Left={this.state.tries}</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-lg-2 col-md-2 col-sm-2 col-xs-2 col-2\"></div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </Provider>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        number1: state.matching_number,\r\n        number2: state.matching_number1,\r\n        number3: state.matching_number2,\r\n        number4: state.matching_number3,\r\n        number5: state.matching_number4,\r\n        // second level matchings\r\n        number6: state.matching_number5,\r\n        number7: state.matching_number6,\r\n        number8: state.matching_number7,\r\n        number9: state.matching_number8,\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(VeryEasyComponent);"]},"metadata":{},"sourceType":"module"}